version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:8.0
    container_name: threat-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: threat-monitoring
    volumes:
      - mongodb_data:/data/db
      - ./backend/seed.js:/docker-entrypoint-initdb.d/seed.js:ro
    networks:
      - threat-network

  # ML Model Service
  ml-model:
    build:
      context: ./model
      dockerfile: Dockerfile
    container_name: threat-ml-model
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - DEBUG=true
      - FLASK_ENV=development
    volumes:
      - ./model:/app
      - ml_model_data:/app/models/saved
    depends_on:
      - mongodb
    networks:
      - threat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: threat-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://mongodb:27017/threat-monitoring
      - PREDICTION_MODEL_URL=http://ml-model:5001
      - CLIENT_URL=http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - ml-model
    networks:
      - threat-network

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: threat-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - threat-network

volumes:
  mongodb_data:
  ml_model_data:

networks:
  threat-network:
    driver: bridge
